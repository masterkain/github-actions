#!/bin/bash
set -e -o pipefail

# Optional env vars
# $DISABLE_SEALED_SECRETS
# $ADDITIONAL_CONFIG
# $ADDITIONAL_CONFIG_SUBSTITUTION
# $INGRESS_HOSTNAME

# Ensure all necessary environment variables are set
if [[ -z "$GITHUB_USERNAME" ]]; then
    echo "Set the GITHUB_USERNAME env variable"
    exit 1
elif [[ -z "$GITHUB_TOKEN" ]]; then
    echo "Set the GITHUB_TOKEN env variable"
    exit 1
elif [[ -z "$GITHUB_ORG" ]]; then
    echo "Set the GITHUB_ORG env variable"
    exit 1
elif [[ -z "$FLUX_REPO" ]]; then
    echo "Set the FLUX_REPO env variable"
    exit 1
elif [[ -z "$FLUX_BRANCH" ]]; then
    echo "Set the FLUX_BRANCH env variable"
    exit 1
elif [[ -z "$FLUX_PATH" ]]; then
    echo "Set the FLUX_PATH env variable"
    exit 1
elif [[ -z "$FLUX_SERVICE" ]]; then
    echo "Set the FLUX_SERVICE env variable"
    exit 1
elif [[ -z "$PULL_REQUEST_BRANCH" ]]; then
    echo "Set the PULL_REQUEST_BRANCH env variable"
    exit 1
elif [[ -z "$COMMIT_USER" ]]; then
    echo "Set the COMMIT_USER env variable"
    exit 1
elif [[ -z "$COMMIT_EMAIL" ]]; then
    echo "Set the COMMIT_EMAIL env variable"
    exit 1
fi

# Clone the Flux config repo
if [[ ! -d "$FLUX_REPO" ]]; then
    git clone -b "${FLUX_BRANCH}" https://"${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/${GITHUB_ORG}/${FLUX_REPO}"
fi

# Create a new HelmRelease
if [[ ! -f "$FLUX_REPO/$FLUX_PATH/$FLUX_SERVICE-$PULL_REQUEST_BRANCH.yaml" ]]; then
    cp "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}.yaml" "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"
fi

BRANCH_SERVICE_NAME="${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}"
PULL_REQUEST_BRANCH_GLOB="glob:${PULL_REQUEST_BRANCH}-*"
yq w "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml" metadata.name "${BRANCH_SERVICE_NAME}" | sponge "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"
yq w "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml" metadata.annotations.[flux.weave.works/tag.chart-image] "${PULL_REQUEST_BRANCH_GLOB}" | sponge "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"
yq w "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml" spec.releaseName "${BRANCH_SERVICE_NAME}" | sponge "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"
yq w "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml" spec.values.service.name "${BRANCH_SERVICE_NAME}" | sponge "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"

if [[ -n "$INGRESS_HOSTNAME" ]]; then
    DOMAIN=$(echo "${INGRESS_HOSTNAME}" | cut -f2- -d '.')
    BRANCH_HOSTNAME="${BRANCH_SERVICE_NAME}.${DOMAIN}"
    sed -i 's#'"${INGRESS_HOSTNAME}"'#'"${BRANCH_HOSTNAME}"'#' "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"
fi

if [[ -n "$DISABLE_SEALED_SECRETS" ]]; then
    yq w "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml" spec.values.sealedSecrets.enabled false | sponge "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"
fi

if [[ -n "$ADDITIONAL_CONFIG" ]]; then
    ADDITIONAL_CONFIG=$(eval echo '${ADDITIONAL_CONFIG}')
    if [[ -n "$ADDITIONAL_CONFIG_SUBSTITUTION" ]]; then
        ADDITIONAL_CONFIG=$(echo "${ADDITIONAL_CONFIG}" | sed 's#'"${FLUX_SERVICE}"'#'"${BRANCH_SERVICE_NAME}"'#g')
    fi
    echo $ADDITIONAL_CONFIG | yq r - | yq m - "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml" | sponge "${FLUX_REPO}/${FLUX_PATH}/${FLUX_SERVICE}-${PULL_REQUEST_BRANCH}.yaml"
fi

git -C "$FLUX_REPO" config user.name "${COMMIT_USER}"
git -C "$FLUX_REPO" config user.email "${COMMIT_EMAIL}"
git -C "$FLUX_REPO" add -A
git -C "$FLUX_REPO" commit -m "Create pull request HelmRelease for ${PULL_REQUEST_BRANCH} branch"
git -C "$FLUX_REPO" push -u origin HEAD
